name: 'Build and Publish Docker Image'
author: DevOps
description: Build and publish Docker image to ECR

inputs:
  aws-access-key-id:
    description: 'The AWS Access key for authentication.'
    required: true
  aws-secret-access-key:
    description: 'The AWS Secret key for authentication.'
    required: true
  ecr-repo-name:
    description: 'The name of the ECR repository to create. This is also used to tag the image.'
    required: true
  dockerfile-path:
    description: 'Path to the Dockerfile to build.'
    required: true
  docker-context:
    description: 'The Docker context to build the Dockerfile from.'
    required: false
    default: '.'
  docker-tag:
    description: 'The tag to use for the image. Typically this will be a Git Hash or something uniquely identifiable.'
    required: true
  docker-extra-args:
    description: 'Any additional args to pass through to the Docker build command used by the Dockerfile.'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Authenticate with AWS
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Publish Docker Image
      id: helm-uninstall
      shell: bash
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPO_NAME: ${{ inputs.ecr-repo-name }}
        DOCKERFILE_PATH: ${{ inputs.dockerfile-path }}
        DOCKER_CONTEXT: ${{ inputs.docker-context }}
        DOCKER_IMAGE_NAME: ${{ inputs.docker-image-name }}
        DOCKER_TAG: ${{ inputs.docker-tag }}
        DOCKER_EXTRA_ARGS: ${{ inputs.docker-extra-args }}
      run: ${{ github.action_path }}/scripts/action.sh